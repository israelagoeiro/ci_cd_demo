name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  # Para permitir execução manual
  workflow_dispatch:

jobs:
  test-api:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
    
    - name: Install dependencies for API
      run: |
        cd api
        go mod download
    
    - name: Run tests for API
      run: |
        cd api
        go test -v ./...
  
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
    
    - name: Install dependencies for Frontend
      run: |
        cd frontend
        go mod download
    
    - name: Run tests for Frontend
      run: |
        cd frontend
        go test -v ./...
  
  build-images:
    runs-on: ubuntu-latest
    needs: [test-api, test-frontend]
    
    steps:
    - uses: actions/checkout@v3
    
    # Configurar QEMU para suporte a múltiplas plataformas
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    # Configurar Docker Buildx com mais opções
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true
        version: latest
        driver-opts: image=moby/buildkit:latest
    
    # Verificar a instalação do Docker
    - name: Check Docker version
      run: |
        docker version
        docker buildx version
    
    # Construir imagem da API com mais detalhes de log
    - name: Build API Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./api
        file: ./api/Dockerfile
        push: false
        load: true
        tags: ci-cd-demo-api:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: false
        outputs: type=docker
        platforms: linux/amd64
    
    # Verificar a imagem da API
    - name: Verify API image
      run: docker images ci-cd-demo-api
    
    # Construir imagem do Frontend com mais detalhes de log
    - name: Build Frontend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: false
        load: true
        tags: ci-cd-demo-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: false
        outputs: type=docker
        platforms: linux/amd64
    
    # Verificar a imagem do Frontend
    - name: Verify Frontend image
      run: docker images ci-cd-demo-frontend 